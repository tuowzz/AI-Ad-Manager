from flask import Flask, jsonify, request
import requests
import os
import openai
from dotenv import load_dotenv
import threading

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Keys
ACCESS_TOKEN = os.getenv("FACEBOOK_ACCESS_TOKEN")
PAGE_ID = os.getenv("FACEBOOK_PAGE_ID")
AD_ACCOUNT_ID = os.getenv("FACEBOOK_AD_ACCOUNT_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Keys ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
if not all([ACCESS_TOKEN, PAGE_ID, AD_ACCOUNT_ID, OPENAI_API_KEY]):
    raise ValueError("‚ùå ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ API Keys ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .env")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ OpenAI
openai.api_key = OPENAI_API_KEY

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask App
app = Flask(__name__)

# ‚úÖ Route ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ API
@app.route('/')
def home():
    return jsonify({"message": "‚úÖ AI Ad Manager API is running!"})


# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡πÉ‡∏´‡∏°‡πà
def create_campaign():
    url = f"https://graph.facebook.com/v18.0/act_{AD_ACCOUNT_ID}/campaigns"
    params = {
        "name": "AI Messenger Campaign",
        "objective": "MESSAGES",
        "status": "ACTIVE",
        "special_ad_categories": [],
        "access_token": ACCESS_TOKEN
    }
    
    try:
        response = requests.post(url, json=params, timeout=10)
        response.raise_for_status()
        campaign_id = response.json().get("id")
        return campaign_id
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error creating campaign: {e}")
        return None


# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏¥‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ Messenger
def create_facebook_messenger_ad(campaign_id, content, image_url=None):
    url = f"https://graph.facebook.com/v18.0/act_{AD_ACCOUNT_ID}/ads"

    ad_params = {
        "name": "AI Messenger Ad",
        "campaign_id": campaign_id,
        "daily_budget": 300 * 100,  # ‡∏á‡∏ö 300 ‡∏ö‡∏≤‡∏ó
        "status": "ACTIVE",
        "creative": {
            "title": "‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ!",
            "body": content,
            "object_story_spec": {
                "page_id": PAGE_ID,
                "link_data": {
                    "message": content,
                    "call_to_action": {
                        "type": "MESSAGE_PAGE",
                        "value": {"page": PAGE_ID}
                    }
                }
            }
        },
        "access_token": ACCESS_TOKEN
    }

    if image_url:
        ad_params["creative"]["object_story_spec"]["link_data"]["picture"] = image_url

    try:
        response = requests.post(url, json=ad_params, timeout=15)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        return {"error": str(e)}


# ‚úÖ API `/auto_ad` ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡πà‡∏≠‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤
@app.route('/auto_ad', methods=['POST'])
def auto_ad():
    # 1Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡πÉ‡∏´‡∏°‡πà
    campaign_id = create_campaign()
    if not campaign_id:
        return jsonify({"error": "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ"}), 400

    # 2Ô∏è‚É£ ‡πÉ‡∏ä‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    audience_data = "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏£‡∏±‡∏ô"

    # 3Ô∏è‚É£ ‡πÉ‡∏ä‡πâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤
    ad_content = "üî• ‡∏™‡∏ô‡πÉ‡∏à‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ! üí¨"

    # 4Ô∏è‚É£ ‡∏¢‡∏¥‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á Messenger
    ad_response = create_facebook_messenger_ad(campaign_id, ad_content)

    return jsonify({
        "campaign_id": campaign_id,
        "audience_analysis": audience_data,
        "ad_text": ad_content,
        "ad_response": ad_response
    })


# ‚úÖ ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
def run_auto_ad():
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...")
    requests.post("http://localhost:8080/auto_ad")

# ‚úÖ ‡πÉ‡∏ä‡πâ Thread ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô auto_ad() ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
if __name__ == "__main__":
    threading.Thread(target=run_auto_ad).start()
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
